name: Axialy Admin UI
on:
  workflow_dispatch:
    inputs:
      droplet_name: { description: "Droplet hostname", required: true, default: axialy-admin-prod }
      region:       { description: "DO region",        default: sfo3 }
      size:         { description: "Droplet size",     default: s-1vcpu-2gb }

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    # 1 ─ checkout admin product + TF only
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        sparse-checkout: |
          axialy-admin-product
          infra/admin_droplet
        sparse-checkout-cone-mode: false

    # 2 ─ Terraform (droplet + firewall)
    - uses: hashicorp/setup-terraform@v3
      with: { terraform_version: 1.6.6, terraform_wrapper: false }

    - name: tf init
      working-directory: infra/admin_droplet
      env: { TF_VAR_do_token: ${{ secrets.DO_PAT }} }
      run: terraform init -input=false

    - name: tf apply
      id: tfout
      working-directory: infra/admin_droplet
      env: { TF_VAR_do_token: ${{ secrets.DO_PAT }} }
      run: |
        terraform apply -auto-approve -input=false \
          -var="droplet_name=${{ github.event.inputs.droplet_name }}" \
          -var="region=${{ github.event.inputs.region }}" \
          -var="droplet_size=${{ github.event.inputs.size }}" \
          -var="ssh_key_fingerprint=${{ secrets.DO_SSH_KEY_FINGERPRINT }}" \
          -var="db_host=${{ secrets.DB_HOST }}" -var="db_port=${{ secrets.DB_PORT }}" \
          -var="db_user=${{ secrets.DB_USER }}" -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -var="admin_default_user=${{ secrets.ADMIN_DEFAULT_USER }}" \
          -var="admin_default_email=${{ secrets.ADMIN_DEFAULT_EMAIL }}" \
          -var="admin_default_password=${{ secrets.ADMIN_DEFAULT_PASSWORD }}"
        echo "ip=$(terraform output -raw droplet_ip)" >> $GITHUB_OUTPUT

    # 3 ─ wait for SSH + push code (same hardened script)
    - name: Deploy app
      env:
        IP:      ${{ steps.tfout.outputs.ip }}
        SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}
        PASS:    ${{ secrets.DROPLET_SSH_PASSPHRASE }}
      run: ./axialy-admin-product/.github/deploy-admin.sh

    # 4 ─ smoke-test & summary
    - run: |
        CODE=$(curl -s -o /dev/null -w '%{http_code}' http://$IP/admin_login.php || true)
        [ "$CODE" = 200 ] && echo "::notice title=Admin UI::$IP ready" || \
          echo "::warning title=Admin UI::HTTP $CODE"
