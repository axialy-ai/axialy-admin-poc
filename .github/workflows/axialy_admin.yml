name: Axialy Admin UI

on:
  workflow_dispatch:
    inputs:
      droplet_name:
        description: "Droplet hostname"
        required: true
        default: "axialy-admin-prod"
      region:
        description: "DO region (e.g. nyc3, sfo3, fra1)"
        default: sfo3
      size:
        description: "Droplet size"
        default: s-1vcpu-2gb

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false
      
      - name: Terraform init
        working-directory: infra/droplet
        run: terraform init -input=false
        env:
          TF_VAR_do_token: ${{ secrets.DO_PAT }}
      
      - name: Terraform apply
        id: tfout
        working-directory: infra/droplet
        run: |
          terraform apply -auto-approve -input=false \
            -var="droplet_name=${{ github.event.inputs.droplet_name }}" \
            -var="region=${{ github.event.inputs.region }}" \
            -var="droplet_size=${{ github.event.inputs.size }}" \
            -var="ssh_key_fingerprint=${{ secrets.DO_SSH_KEY_FINGERPRINT }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_port=${{ secrets.DB_PORT }}" \
            -var="db_user=${{ secrets.DB_USER }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="admin_default_user=${{ secrets.ADMIN_DEFAULT_USER }}" \
            -var="admin_default_email=${{ secrets.ADMIN_DEFAULT_EMAIL }}" \
            -var="admin_default_password=${{ secrets.ADMIN_DEFAULT_PASSWORD }}"
          
          # Export outputs to GITHUB_OUTPUT
          echo "droplet_ip=$(terraform output -raw droplet_ip)" >> "$GITHUB_OUTPUT"
          echo "droplet_id=$(terraform output -raw droplet_id)" >> "$GITHUB_OUTPUT"
        env:
          TF_VAR_do_token: ${{ secrets.DO_PAT }}
      
      - name: Wait for droplet to be ready
        run: |
          echo "Waiting for droplet to be ready..."
          sleep 30
      
      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Add droplet to known hosts
          ssh-keyscan -H ${{ steps.tfout.outputs.droplet_ip }} >> ~/.ssh/known_hosts 2>/dev/null || true
      
      - name: Deploy application
        env:
          DROPLET_IP: ${{ steps.tfout.outputs.droplet_ip }}
          SSH_KEY_PATH: ~/.ssh/deploy_key
        run: |
          # Create deployment script
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -e
          
          echo "Setting up Axialy Admin application..."
          
          # Update system packages
          sudo apt-get update
          sudo apt-get install -y nginx php8.1-fpm php8.1-mysql php8.1-mbstring \
            php8.1-xml php8.1-curl php8.1-zip php8.1-gd git
          
          # Configure PHP
          sudo sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php/8.1/fpm/php.ini
          sudo systemctl restart php8.1-fpm
          
          # Create web directory
          sudo mkdir -p /var/www/axialy-admin
          sudo chown -R www-data:www-data /var/www/axialy-admin
          
          # Configure Nginx
          sudo tee /etc/nginx/sites-available/axialy-admin > /dev/null << 'NGINX'
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              
              root /var/www/axialy-admin;
              index index.php index.html;
              
              server_name _;
              
              location / {
                  try_files \$uri \$uri/ /index.php?\$query_string;
              }
              
              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
                  include fastcgi_params;
              }
              
              location ~ /\.ht {
                  deny all;
              }
              
              location ~ /\. {
                  deny all;
              }
              
              # Security headers
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;
          }
          NGINX
          
          # Enable site
          sudo ln -sf /etc/nginx/sites-available/axialy-admin /etc/nginx/sites-enabled/
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo nginx -t
          sudo systemctl restart nginx
          
          echo "Nginx configured successfully!"
          EOF
          
          # Copy and execute deployment script
          scp -i $SSH_KEY_PATH -o StrictHostKeyChecking=no deploy.sh root@$DROPLET_IP:/tmp/
          ssh -i $SSH_KEY_PATH -o StrictHostKeyChecking=no root@$DROPLET_IP "bash /tmp/deploy.sh"
          
          # Deploy application files
          echo "Deploying application files..."
          
          # Create temporary directory for deployment
          mkdir -p /tmp/axialy-admin-deploy
          cp -r axialy-admin-product/* /tmp/axialy-admin-deploy/
          
          # Deploy via rsync
          rsync -avz --delete \
            -e "ssh -i $SSH_KEY_PATH -o StrictHostKeyChecking=no" \
            /tmp/axialy-admin-deploy/ \
            root@$DROPLET_IP:/var/www/axialy-admin/
          
          # Set proper permissions
          ssh -i $SSH_KEY_PATH -o StrictHostKeyChecking=no root@$DROPLET_IP << 'REMOTE_EOF'
          chown -R www-data:www-data /var/www/axialy-admin
          find /var/www/axialy-admin -type d -exec chmod 755 {} \;
          find /var/www/axialy-admin -type f -exec chmod 644 {} \;
          
          # Create environment file with database credentials
          cat > /var/www/axialy-admin/.env << ENV_EOF
          # Axialy Admin Database
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=axialy_admin
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          
          # Axialy UI Database
          UI_DB_HOST=${{ secrets.DB_HOST }}
          UI_DB_PORT=${{ secrets.DB_PORT }}
          UI_DB_NAME=axialy_ui
          UI_DB_USER=${{ secrets.DB_USER }}
          UI_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          
          # Admin defaults
          ADMIN_DEFAULT_USER=${{ secrets.ADMIN_DEFAULT_USER }}
          ADMIN_DEFAULT_EMAIL=${{ secrets.ADMIN_DEFAULT_EMAIL }}
          ADMIN_DEFAULT_PASSWORD=${{ secrets.ADMIN_DEFAULT_PASSWORD }}
          ENV_EOF
          
          chmod 640 /var/www/axialy-admin/.env
          chown www-data:www-data /var/www/axialy-admin/.env
          
          # Restart services
          systemctl restart php8.1-fpm nginx
          
          echo "Application deployed successfully!"
          REMOTE_EOF
          
          # Cleanup
          rm -rf /tmp/axialy-admin-deploy
          rm -f deploy.sh
      
      - name: Display deployment info
        run: |
          echo "========================================"
          echo "Axialy Admin deployed successfully!"
          echo "========================================"
          echo ""
          echo "Access your application at:"
          echo "http://${{ steps.tfout.outputs.droplet_ip }}"
          echo ""
          echo "Droplet Details:"
          echo "- Name: ${{ github.event.inputs.droplet_name }}"
          echo "- IP: ${{ steps.tfout.outputs.droplet_ip }}"
          echo "- Region: ${{ github.event.inputs.region }}"
          echo "- Size: ${{ github.event.inputs.size }}"
          echo ""
          echo "Database connection has been configured automatically."
          echo "========================================"
