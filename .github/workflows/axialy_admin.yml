name: Axialy Admin UI  (AWS EC2)

on:
  workflow_dispatch:
    inputs:
      instance_name:
        description: "EC2 Name tag"
        required: true
        default: axialy-admin-prod
      instance_type:
        description: "EC2 instance class"
        default: t3.small

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          axialy-admin-product
          infra/ec2

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6
        terraform_wrapper: false

    - name: Terraform init
      working-directory: infra/ec2
      run: terraform init -input=false

    - name: Terraform apply
      id: tfout
      working-directory: infra/ec2
      run: |
        terraform apply -auto-approve -input=false \
          -var="instance_name=${{ github.event.inputs.instance_name }}" \
          -var="instance_type=${{ github.event.inputs.instance_type }}" \
          -var="key_name=${{ secrets.EC2_KEY_PAIR }}" \
          -var="elastic_ip_allocation_id=${{ secrets.EC2_ELASTIC_IP_ALLOCATION_ID }}" \
          -var="db_host=${{ secrets.DB_HOST }}" \
          -var="db_port=${{ secrets.DB_PORT }}" \
          -var="db_user=${{ secrets.DB_USER }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -var="admin_default_user=${{ secrets.ADMIN_DEFAULT_USER }}" \
          -var="admin_default_email=${{ secrets.ADMIN_DEFAULT_EMAIL }}" \
          -var="admin_default_password=${{ secrets.ADMIN_DEFAULT_PASSWORD }}" \
          -var="component_tag=admin" \
          -var="smtp_host=${{ secrets.SMTP_HOST }}" \
          -var="smtp_port=${{ secrets.SMTP_PORT }}" \
          -var="smtp_user=${{ secrets.SMTP_USER }}" \
          -var="smtp_password=${{ secrets.SMTP_PASSWORD }}"

        echo "public_ip=$(terraform output -raw public_ip)" >>"$GITHUB_OUTPUT"

    - name: Wait for SSH
      run: sleep 60

    - name: Push & bootstrap
      env:
        HOST: ${{ steps.tfout.outputs.public_ip }}
      run: |
        mkdir -p ~/.ssh && chmod 700 ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts 2>/dev/null || true

        sudo apt-get update -qq
        sudo apt-get install -y expect tar

        # expect helpers (unchanged)
        cat > ssh.exp <<'EOF'
#!/usr/bin/expect -f
set timeout 300
set key [lindex $argv 0]; set host [lindex $argv 1]; set cmd [lindex $argv 2]
spawn ssh -i $key -o StrictHostKeyChecking=no ubuntu@$host $cmd
expect eof
EOF
        chmod +x ssh.exp

        # bootstrap script identical to legacy â€“ uses apt on Ubuntu 22.04
        tar -czf /tmp/app.tar.gz -C axialy-admin-product .
        ./ssh.exp ~/.ssh/deploy_key "$HOST" "sudo mkdir -p /tmp/deploy && sudo chown ubuntu:ubuntu /tmp/deploy"
        scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no /tmp/app.tar.gz ubuntu@"$HOST":/tmp/deploy/
        ./ssh.exp ~/.ssh/deploy_key "$HOST" "sudo /usr/bin/cloud-init single --file /var/lib/cloud/instance/user-data.txt --name write-files --frequency always; \
            sudo tar -xzf /tmp/deploy/app.tar.gz -C /var/www/axialy-admin; \
            sudo chown -R www-data:www-data /var/www/axialy-admin; \
            sudo systemctl restart nginx php8.1-fpm"

    - name: Smoke test
      run: |
        code=$(curl -s -o /dev/null -w '%{http_code}' http://${{ steps.tfout.outputs.public_ip }}/admin_login.php || echo 000)
        test "$code" = 200 || (echo "Unexpected HTTP $code"; exit 1)
