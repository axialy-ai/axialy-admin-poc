name: Axialy Admin UI

on:
  workflow_dispatch:
    inputs:
      droplet_name:
        description: "Droplet hostname"
        required: true
        default: "axialy-admin-prod"
      region:
        description: "DO region (e.g. nyc3, sfo3, fra1)"
        default: sfo3
      size:
        description: "Droplet size"
        default: s-1vcpu-2gb

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false

      - name: Terraform init
        working-directory: infra/droplet
        run: terraform init -input=false
        env:
          TF_VAR_do_token: ${{ secrets.DO_PAT }}

      - name: Terraform apply
        id: tfout
        working-directory: infra/droplet
        run: |
          terraform apply -auto-approve -input=false \
            -var="droplet_name=${{ github.event.inputs.droplet_name }}" \
            -var="region=${{ github.event.inputs.region }}" \
            -var="droplet_size=${{ github.event.inputs.size }}" \
            -var="ssh_key_fingerprint=${{ secrets.DO_SSH_KEY_FINGERPRINT }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_port=${{ secrets.DB_PORT }}" \
            -var="db_user=${{ secrets.DB_USER }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="admin_default_user=${{ secrets.ADMIN_DEFAULT_USER }}" \
            -var="admin_default_email=${{ secrets.ADMIN_DEFAULT_EMAIL }}" \
            -var="admin_default_password=${{ secrets.ADMIN_DEFAULT_PASSWORD }}"

          echo "droplet_ip=$(terraform output -raw droplet_ip)"  >> "$GITHUB_OUTPUT"
          echo "droplet_id=$(terraform output -raw droplet_id)"  >> "$GITHUB_OUTPUT"
        env:
          TF_VAR_do_token: ${{ secrets.DO_PAT }}

      - name: Wait for droplet to be ready
        run: |
          echo "Waiting for droplet to be ready..."
          sleep 60

      - name: Configure SSH and Deploy
        env:
          DROPLET_IP: ${{ steps.tfout.outputs.droplet_ip }}
        run: |
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts 2>/dev/null || true
          sudo apt-get update && sudo apt-get install -y expect

          # ---------- expect helper for ssh ----------
          cat > ssh_with_pass.exp <<'EOF'
          #!/usr/bin/expect -f
          set timeout 300
          set ssh_key  [lindex $argv 0]
          set host     [lindex $argv 1]
          set passph   [lindex $argv 2]
          set cmd      [lindex $argv 3]
          spawn ssh -i $ssh_key -o StrictHostKeyChecking=no root@$host $cmd
          expect {
            "Enter passphrase for key*" { send "$passph\r"; exp_continue }
            eof
          }
          EOF
          chmod +x ssh_with_pass.exp

          # ---------- expect helper for scp ----------
          cat > scp_with_pass.exp <<'EOF'
          #!/usr/bin/expect -f
          set timeout 300
          set ssh_key  [lindex $argv 0]
          set source   [lindex $argv 1]
          set dest     [lindex $argv 2]
          set passph   [lindex $argv 3]
          spawn scp -i $ssh_key -o StrictHostKeyChecking=no $source $dest
          expect {
            "Enter passphrase for key*" { send "$passph\r"; exp_continue }
            eof
          }
          EOF
          chmod +x scp_with_pass.exp

          # ---------- deployment script ----------
          cat > deploy.sh <<'DEPLOY_SCRIPT'
          #!/bin/bash
          set -e
          echo "Setting up Axialy Admin application..."

          while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
            echo "Waiting for apt lock..."
            sleep 5
          done

          apt-get update
          apt-get install -y nginx php8.1-fpm php8.1-mysql php8.1-mbstring php8.1-xml php8.1-curl php8.1-zip php8.1-gd

          # Harden PHP default behaviour
          sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php/8.1/fpm/php.ini

          ################################################################
          # GLOBAL SESSION-DIR PERMISSION FIX
          # (root:www-data  1730) – makes PHP-FPM sessions reliable
          ################################################################
          chown root:www-data /var/lib/php/sessions
          chmod 1730          /var/lib/php/sessions
          systemctl restart php8.1-fpm
          ################################################################

          cat > /etc/nginx/sites-available/axialy-admin <<'NGINX_CONF'
          server {
            listen 80 default_server;
            listen [::]:80 default_server;

            root /var/www/axialy-admin;
            index index.php index.html;
            server_name _;

            location / {
              try_files $uri $uri/ /index.php?$query_string;
            }

            location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            }

            location ~ /\. {
              deny all;
            }

            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
          }
          NGINX_CONF

          ln -sf /etc/nginx/sites-available/axialy-admin /etc/nginx/sites-enabled/
          rm -f /etc/nginx/sites-enabled/default
          nginx -t
          systemctl restart nginx
          DEPLOY_SCRIPT

          # ---------- send & run deploy script ----------
          ./scp_with_pass.exp ~/.ssh/deploy_key deploy.sh root@$DROPLET_IP:/tmp/deploy.sh "${{ secrets.DROPLET_SSH_PASSPHRASE }}"
          ./ssh_with_pass.exp ~/.ssh/deploy_key $DROPLET_IP "${{ secrets.DROPLET_SSH_PASSPHRASE }}" \
            "chmod +x /tmp/deploy.sh && bash /tmp/deploy.sh"

          # ---------- package application ----------
          cd axialy-admin-product
          tar -czf /tmp/axialy-admin.tar.gz .
          cd ..

          # ---------- copy application ----------
          ./scp_with_pass.exp ~/.ssh/deploy_key /tmp/axialy-admin.tar.gz root@$DROPLET_IP:/tmp/ "${{ secrets.DROPLET_SSH_PASSPHRASE }}"
          ./ssh_with_pass.exp  ~/.ssh/deploy_key $DROPLET_IP "${{ secrets.DROPLET_SSH_PASSPHRASE }}" \
            "mkdir -p /var/www/axialy-admin && \
             tar -xzf /tmp/axialy-admin.tar.gz -C /var/www/axialy-admin && \
             chown -R www-data:www-data /var/www/axialy-admin && \
             find /var/www/axialy-admin -type d -exec chmod 755 {} \; && \
             find /var/www/axialy-admin -type f -exec chmod 644 {} \;"

          # ---------- generate environment file ----------
          cat > env_file <<'ENV_EOF'
          # Axialy Admin DB
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=axialy_admin
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          # Axialy UI DB
          UI_DB_HOST=${{ secrets.DB_HOST }}
          UI_DB_PORT=${{ secrets.DB_PORT }}
          UI_DB_NAME=axialy_ui
          UI_DB_USER=${{ secrets.DB_USER }}
          UI_DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          # Admin defaults
          ADMIN_DEFAULT_USER=${{ secrets.ADMIN_DEFAULT_USER }}
          ADMIN_DEFAULT_EMAIL=${{ secrets.ADMIN_DEFAULT_EMAIL }}
          ADMIN_DEFAULT_PASSWORD=${{ secrets.ADMIN_DEFAULT_PASSWORD }}
          ENV_EOF

          # ---------- copy environment file ----------
          ./scp_with_pass.exp ~/.ssh/deploy_key env_file root@$DROPLET_IP:/var/www/axialy-admin/.env "${{ secrets.DROPLET_SSH_PASSPHRASE }}"

          # ---------- set permissions ----------
          ./ssh_with_pass.exp ~/.ssh/deploy_key $DROPLET_IP "${{ secrets.DROPLET_SSH_PASSPHRASE }}" \
            "chmod 640 /var/www/axialy-admin/.env && chown www-data:www-data /var/www/axialy-admin/.env"

          # ---------- restart services ----------
          ./ssh_with_pass.exp ~/.ssh/deploy_key $DROPLET_IP "${{ secrets.DROPLET_SSH_PASSPHRASE }}" \
            "systemctl restart php8.1-fpm nginx"

          # ---------- cleanup ----------
          rm -f deploy.sh env_file /tmp/axialy-admin.tar.gz ssh_with_pass.exp scp_with_pass.exp

      - name: Verify deployment
        run: |
          echo "Testing deployment..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ steps.tfout.outputs.droplet_ip }}/admin_login.php || echo "000")
          if [ "$RESPONSE" = "200" ]; then
            echo "✅ Deployment successful! Application is responding."
          else
            echo "⚠️  Application may still be initializing. HTTP response code: $RESPONSE"
          fi

      - name: Display deployment info
        run: |
          echo "========================================"
          echo "Axialy Admin deployed successfully!"
          echo "========================================"
          echo "Access your application at:"
          echo "  http://${{ steps.tfout.outputs.droplet_ip }}/admin_login.php"
          echo ""
          echo "Droplet Details:"
          echo "  Name   : ${{ github.event.inputs.droplet_name }}"
          echo "  IP     : ${{ steps.tfout.outputs.droplet_ip }}"
          echo "  Region : ${{ github.event.inputs.region }}"
          echo "  Size   : ${{ github.event.inputs.size }}"
          echo "========================================"
