name: Deploy Axialy Admin

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  deploy:
    name: Deploy Axialy Infrastructure and Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0
    
    - name: Configure DigitalOcean credentials
      run: |
        echo "DIGITALOCEAN_TOKEN=${{ secrets.DIGITALOCEAN_TOKEN }}" >> $GITHUB_ENV
        echo "TF_VAR_do_token=${{ secrets.DIGITALOCEAN_TOKEN }}" >> $GITHUB_ENV
        echo "TF_VAR_ssh_fingerprint=${{ secrets.SSH_FINGERPRINT }}" >> $GITHUB_ENV
        echo "TF_VAR_admin_default_user=${{ secrets.ADMIN_DEFAULT_USER }}" >> $GITHUB_ENV
        echo "TF_VAR_admin_default_email=${{ secrets.ADMIN_DEFAULT_EMAIL }}" >> $GITHUB_ENV
        echo "TF_VAR_admin_default_password=${{ secrets.ADMIN_DEFAULT_PASSWORD }}" >> $GITHUB_ENV
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    
    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -out=tfplan
    
    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve tfplan
    
    - name: Capture Terraform Outputs
      working-directory: ./terraform
      id: tf_outputs
      run: |
        echo "droplet_ip=$(terraform output -raw droplet_ip)" >> $GITHUB_OUTPUT
        echo "db_host=$(terraform output -raw db_host)" >> $GITHUB_OUTPUT
        echo "db_port=$(terraform output -raw db_port)" >> $GITHUB_OUTPUT
        echo "db_admin_user=$(terraform output -raw db_admin_user)" >> $GITHUB_OUTPUT
        echo "db_admin_password=$(terraform output -raw db_admin_password)" >> $GITHUB_OUTPUT
        echo "db_ui_user=$(terraform output -raw db_ui_user)" >> $GITHUB_OUTPUT
        echo "db_ui_password=$(terraform output -raw db_ui_password)" >> $GITHUB_OUTPUT
    
    - name: Wait for Droplet SSH
      run: |
        echo "Waiting for SSH to be available..."
        for i in {1..30}; do
          if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 root@${{ steps.tf_outputs.outputs.droplet_ip }} "echo 'SSH ready'"; then
            echo "SSH connection established"
            break
          fi
          echo "Attempt $i failed, waiting..."
          sleep 10
        done
    
    - name: Deploy Application
      env:
        DROPLET_IP: ${{ steps.tf_outputs.outputs.droplet_ip }}
        DB_HOST: ${{ steps.tf_outputs.outputs.db_host }}
        DB_PORT: ${{ steps.tf_outputs.outputs.db_port }}
        DB_ADMIN_USER: ${{ steps.tf_outputs.outputs.db_admin_user }}
        DB_ADMIN_PASSWORD: ${{ steps.tf_outputs.outputs.db_admin_password }}
        DB_UI_USER: ${{ steps.tf_outputs.outputs.db_ui_user }}
        DB_UI_PASSWORD: ${{ steps.tf_outputs.outputs.db_ui_password }}
      run: |
        # Create deployment script
        cat > deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        
        # Update system
        apt-get update
        apt-get install -y nginx php8.3-fpm php8.3-mysql php8.3-mbstring php8.3-xml php8.3-curl php8.3-zip git
        
        # Configure PHP
        sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php/8.3/fpm/php.ini
        systemctl restart php8.3-fpm
        
        # Clone repository
        cd /var/www
        rm -rf axialy-admin
        git clone https://github.com/${{ github.repository }}.git axialy-admin
        
        # Set permissions
        chown -R www-data:www-data /var/www/axialy-admin
        chmod -R 755 /var/www/axialy-admin
        
        # Create environment file
        cat > /var/www/axialy-admin/.env << EOL
        # Admin Database
        DB_HOST=${DB_HOST}
        DB_PORT=${DB_PORT}
        DB_NAME=Axialy_ADMIN
        DB_USER=${DB_ADMIN_USER}
        DB_PASSWORD=${DB_ADMIN_PASSWORD}
        
        # UI Database
        UI_DB_HOST=${DB_HOST}
        UI_DB_PORT=${DB_PORT}
        UI_DB_NAME=Axialy_UI
        UI_DB_USER=${DB_UI_USER}
        UI_DB_PASSWORD=${DB_UI_PASSWORD}
        
        # Admin defaults
        ADMIN_DEFAULT_USER=${{ secrets.ADMIN_DEFAULT_USER }}
        ADMIN_DEFAULT_EMAIL=${{ secrets.ADMIN_DEFAULT_EMAIL }}
        ADMIN_DEFAULT_PASSWORD=${{ secrets.ADMIN_DEFAULT_PASSWORD }}
        EOL
        
        # Configure Nginx
        cat > /etc/nginx/sites-available/axialy-admin << 'EONGINX'
        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            
            root /var/www/axialy-admin/axialy-admin-product;
            index index.php index.html;
            
            server_name _;
            
            location / {
                try_files \$uri \$uri/ /index.php?\$query_string;
            }
            
            location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
                fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
                include fastcgi_params;
            }
            
            location ~ /\.ht {
                deny all;
            }
            
            location ~ /\. {
                deny all;
            }
        }
        EONGINX
        
        # Enable site
        rm -f /etc/nginx/sites-enabled/default
        ln -sf /etc/nginx/sites-available/axialy-admin /etc/nginx/sites-enabled/
        
        # Test and reload Nginx
        nginx -t
        systemctl reload nginx
        
        echo "Deployment complete!"
        EOF
        
        # Copy and execute deployment script
        scp -o StrictHostKeyChecking=no deploy.sh root@${DROPLET_IP}:/tmp/
        ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} "bash /tmp/deploy.sh"
    
    - name: Summary
      run: |
        echo "## Deployment Complete! ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Access your Axialy Admin installation:" >> $GITHUB_STEP_SUMMARY
        echo "- URL: http://${{ steps.tf_outputs.outputs.droplet_ip }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### First Run Instructions:" >> $GITHUB_STEP_SUMMARY
        echo "1. Navigate to the URL above" >> $GITHUB_STEP_SUMMARY
        echo "2. When prompted, enter the initialization password: **Casellio**" >> $GITHUB_STEP_SUMMARY
        echo "3. Click 'Exit' button to create the initial admin user" >> $GITHUB_STEP_SUMMARY
        echo "4. Login with username: **caseylide** and password: **Casellio**" >> $GITHUB_STEP_SUMMARY
