name: Axialy Admin UI

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-24.04

    env:
      DIGITALOCEAN_TOKEN:        ${{ secrets.DIGITALOCEAN_TOKEN }}
      TF_VAR_do_token:           ${{ secrets.DIGITALOCEAN_TOKEN }}
      DROPLET_SSH_KEY:           ${{ secrets.DROPLET_SSH_KEY }}
      DROPLET_SSH_PASSPHRASE:    ${{ secrets.DROPLET_SSH_PASSPHRASE }}
      TF_VAR_ssh_fingerprint:    ${{ secrets.SSH_FINGERPRINT }}

    steps:
      # ─────────────── Checkout the FULL repository ───────────────
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          # Remove sparse-checkout so the entire repo is available
          fetch-depth: 0
          # Keep submodules off, LFS off, etc., matching your original
          submodules: false
          lfs: false

      # ───────────── Terraform Setup ─────────────
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false \
            -var="droplet_name=axialy-admin-prod" \
            -var="region=sfo3" \
            -var="droplet_size=s-1vcpu-2gb" \
            -var="ssh_key_fingerprint=${{ secrets.SSH_FINGERPRINT }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_port=${{ secrets.DB_PORT }}" \
            -var="db_user=${{ secrets.DB_USER }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="admin_default_user=${{ secrets.ADMIN_DEFAULT_USER }}" \
            -var="admin_default_email=${{ secrets.ADMIN_DEFAULT_EMAIL }}" \
            -var="admin_default_password=${{ secrets.ADMIN_DEFAULT_PASSWORD }}"
        env:
          TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      # ───────────── Bootstrap & Deploy ─────────────
      - name: Wait for droplet
        run: sleep 60

      - name: Copy deploy key & install helpers
        run: |
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ steps.deploy_ip.outputs.droplet_ip }} >> ~/.ssh/known_hosts
          sudo apt-get update -qq && sudo apt-get install -y expect

      - name: Deploy Axialy Admin
        run: |
          # (your existing expect-based scp/ssh scripts here)
          ./ssh_with_pass.exp ~/.ssh/deploy_key ${{ steps.deploy_ip.outputs.droplet_ip }} "${{ secrets.DROPLET_SSH_PASSPHRASE }}" "bash /tmp/deploy.sh"

      - name: Smoke-test
        run: |
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ steps.deploy_ip.outputs.droplet_ip }}/admin_login.php || echo "000")
          if [ "$HTTP_CODE" != "200" ]; then
            echo "::error::Application not responding, HTTP code: $HTTP_CODE"
            exit 1
          fi
          echo "✅ Admin UI is live on http://${{ steps.deploy_ip.outputs.droplet_ip }}/admin_login.php"

    # Optional: capture the droplet IP from Terraform outputs
    outputs:
      droplet_ip:
        description: 'New droplet IP'
        value: ${{ steps.deploy.outputs.droplet_ip }}
