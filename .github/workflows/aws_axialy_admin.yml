# Axialy Admin deployment on AWS
name: Axialy Admin on AWS

on:
  workflow_dispatch:
    inputs:
      instance_name:
        description: 'EC2 instance Name tag'
        required: true
        default: axialy-admin-prod
      region:
        description: 'AWS region'
        required: true
        default: us-west-2
      instance_type:
        description: 'EC2 instance type'
        required: true
        default: t3.small

env:
  AWS_ACCESS_KEY_ID:              ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:          ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EC2_KEY_PAIR:                   ${{ secrets.EC2_KEY_PAIR }}
  EC2_ELASTIC_IP_ALLOCATION_ID:   ${{ secrets.EC2_ELASTIC_IP_ALLOCATION_ID }}
  EC2_SSH_PRIVATE_KEY:            ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  DB_HOST:                        ${{ secrets.DB_HOST }}
  DB_PORT:                        ${{ secrets.DB_PORT }}
  DB_USER:                        ${{ secrets.DB_USER }}
  DB_PASSWORD:                    ${{ secrets.DB_PASSWORD }}
  ADMIN_DEFAULT_USER:             ${{ secrets.ADMIN_DEFAULT_USER }}
  ADMIN_DEFAULT_EMAIL:            ${{ secrets.ADMIN_DEFAULT_EMAIL }}
  ADMIN_DEFAULT_PASSWORD:         ${{ secrets.ADMIN_DEFAULT_PASSWORD }}
  SMTP_HOST:                      ${{ secrets.SMTP_HOST }}
  SMTP_PORT:                      ${{ secrets.SMTP_PORT }}
  SMTP_USER:                      ${{ secrets.SMTP_USER }}
  SMTP_PASSWORD:                  ${{ secrets.SMTP_PASSWORD }}

jobs:
  deploy:
    # Keeps the job from running if someone ever re-adds other triggers
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout only what we need
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          axialy-admin-product
          infra/ec2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6
        terraform_wrapper: false

    - name: Terraform init
      run: terraform -chdir=infra/ec2 init -input=false

    - name: Terraform apply (creates / refreshes EC2)
      id: tf_apply
      run: |
        terraform -chdir=infra/ec2 apply -auto-approve -input=false \
          -var="instance_name=${{ inputs.instance_name }}" \
          -var="region=${{ inputs.region }}" \
          -var="instance_type=${{ inputs.instance_type }}" \
          -var="key_name=${{ env.EC2_KEY_PAIR }}" \
          -var="elastic_ip_allocation_id=${{ env.EC2_ELASTIC_IP_ALLOCATION_ID }}"

        echo "INSTANCE_IP=$(terraform -chdir=infra/ec2 output -raw instance_public_ip)" >> "$GITHUB_ENV"

    - name: Prepare SSH key
      run: |
        echo "${EC2_SSH_PRIVATE_KEY}" > pk.pem
        chmod 600 pk.pem

    - name: Wait for SSH port (up to 10 min)
      run: |
        for i in {1..60}; do
          if ssh -o StrictHostKeyChecking=no -i pk.pem ubuntu@"${INSTANCE_IP}" true 2>/dev/null; then
            break
          fi
          sleep 10
        done

    - name: Upload application bundle
      run: |
        tar -czf axialy-admin.tar.gz -C axialy-admin-product .
        scp -o StrictHostKeyChecking=no -i pk.pem axialy-admin.tar.gz \
            ubuntu@"${INSTANCE_IP}":/home/ubuntu/

    - name: Bootstrap server and deploy code
      run: |
        ssh -o StrictHostKeyChecking=no -i pk.pem ubuntu@"${INSTANCE_IP}" <<'ENDSSH'
          set -euo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y nginx php8.1-fpm php8.1-mysql php8.1-curl \
                                   php8.1-xml php8.1-zip php8.1-gd php8.1-mbstring

          sudo mkdir -p /var/www/axialy-admin
          sudo tar -xzf /home/ubuntu/axialy-admin.tar.gz -C /var/www/axialy-admin

          # ---------- .env ----------
          cat > /var/www/axialy-admin/.env <<'EOF'
DB_HOST=${{ env.DB_HOST }}
DB_PORT=${{ env.DB_PORT }}
DB_NAME=axialy_admin
DB_USER=${{ env.DB_USER }}
DB_PASSWORD=${{ env.DB_PASSWORD }}
ADMIN_DEFAULT_USER=${{ env.ADMIN_DEFAULT_USER }}
ADMIN_DEFAULT_EMAIL=${{ env.ADMIN_DEFAULT_EMAIL }}
ADMIN_DEFAULT_PASSWORD=${{ env.ADMIN_DEFAULT_PASSWORD }}
SMTP_HOST=${{ env.SMTP_HOST }}
SMTP_PORT=${{ env.SMTP_PORT }}
SMTP_USER=${{ env.SMTP_USER }}
SMTP_PASSWORD=${{ env.SMTP_PASSWORD }}
EOF
          sudo chmod 640 /var/www/axialy-admin/.env
          sudo chown -R www-data:www-data /var/www/axialy-admin

          # ---------- Nginx ----------
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo bash -c 'cat > /etc/nginx/sites-available/axialy-admin <<NGINX
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  root /var/www/axialy-admin;
  index index.php index.html;

  location / {
    try_files \$uri \$uri/ /index.php?\$query_string;
  }

  location ~ \\.php\$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
  }
}
NGINX'
          sudo ln -sf /etc/nginx/sites-available/axialy-admin /etc/nginx/sites-enabled/axialy-admin
          sudo systemctl restart php8.1-fpm nginx
ENDSSH
