name: Axialy DB
on:
  workflow_dispatch:
    inputs:
      db_cluster_name:
        description: "DigitalOcean DB-cluster name"
        required: true
      region:
        description: "DO region (nyc3, sfo3, â€¦)"
        default: nyc3
      size:
        description: "Cluster size slug"
        default: db-s-1vcpu-1gb

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.6.6 }

      - name: Terraform init
        working-directory: infra/database
        run: terraform init -input=false

      - name: Terraform apply
        id: tfout
        working-directory: infra/database
        run: |
          terraform apply -auto-approve \
            -var="db_cluster_name=${{ github.event.inputs.db_cluster_name }}" \
            -var="region=${{ github.event.inputs.region }}" \
            -var="db_size=${{ github.event.inputs.size }}"

          terraform output -json > tf.json
          for k in db_host db_port \
                   admin_db_name admin_db_user admin_db_pass \
                   ui_db_name    ui_db_user    ui_db_pass; do
            echo "$k=$(jq -r .${k}.value tf.json)" >>"$GITHUB_OUTPUT"
          done

      - name: Save DB creds as repo secrets
        if: success()
        env: { GH_TOKEN: ${{ secrets.GH_PAT }} }
        run: |
          gh secret set DB_HOST        --body "${{ steps.tfout.outputs.db_host }}"
          gh secret set DB_PORT        --body "${{ steps.tfout.outputs.db_port }}"

          gh secret set ADMIN_DB_NAME  --body "${{ steps.tfout.outputs.admin_db_name }}"
          gh secret set ADMIN_DB_USER  --body "${{ steps.tfout.outputs.admin_db_user }}"
          gh secret set ADMIN_DB_PASS  --body "${{ steps.tfout.outputs.admin_db_pass }}"

          gh secret set UI_DB_NAME     --body "${{ steps.tfout.outputs.ui_db_name }}"
          gh secret set UI_DB_USER     --body "${{ steps.tfout.outputs.ui_db_user }}"
          gh secret set UI_DB_PASS     --body "${{ steps.tfout.outputs.ui_db_pass }}"
