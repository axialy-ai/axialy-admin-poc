name: Axialy DB

on:
  workflow_dispatch:
    inputs:
      db_cluster_name:
        description: "DigitalOcean DB-cluster name"
        required: true
      region:
        description: "DO region (e.g. nyc3, sfo3, fra1)"
        default: nyc3
      size:
        description: "Cluster size slug"
        default: db-s-1vcpu-1gb

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.6.6 }

      - name: Terraform init
        working-directory: infra/database
        run: terraform init -input=false

      - name: Terraform apply
        id: tfout                       # ← capture outputs here
        working-directory: infra/database
        run: |
          terraform apply -auto-approve \
            -var="db_cluster_name=${{ github.event.inputs.db_cluster_name }}" \
            -var="region=${{ github.event.inputs.region }}" \
            -var="db_size=${{ github.event.inputs.size }}"

          # Export outputs to $GITHUB_OUTPUT (new syntax)
          terraform output -json > tf.json
          echo "db_host=$(jq -r .db_host.value tf.json)" >> "$GITHUB_OUTPUT"
          echo "db_port=$(jq -r .db_port.value tf.json)" >> "$GITHUB_OUTPUT"
          echo "db_user=$(jq -r .db_user.value tf.json)" >> "$GITHUB_OUTPUT"
          echo "db_pass=$(jq -r .db_pass.value tf.json)" >> "$GITHUB_OUTPUT"

      - name: Save DB creds as repo secrets
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh secret set DB_HOST     --body "${{ steps.tfout.outputs.db_host }}"
          gh secret set DB_PORT     --body "${{ steps.tfout.outputs.db_port }}"
          gh secret set DB_USER     --body "${{ steps.tfout.outputs.db_user }}"
          gh secret set DB_PASSWORD --body "${{ steps.tfout.outputs.db_pass }}"
