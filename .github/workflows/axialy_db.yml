name: Axialy DB

on:
  workflow_dispatch:
    inputs:
      db_cluster_name:
        description: "DigitalOcean DB-cluster name"
        required: true
      region:
        description: "DO region (e.g. nyc3, sfo3, fra1)"
        default: sfo3
      size:
        description: "Cluster size slug"
        default: db-s-1vcpu-1gb

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      TF_VAR_do_token: ${{ secrets.DO_PAT }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false  # Important for capturing outputs
      
      - name: Terraform init
        working-directory: infra/database
        run: terraform init -input=false
      
      - name: Terraform apply
        id: tfout
        working-directory: infra/database
        run: |
          terraform apply -auto-approve -input=false \
            -var="db_cluster_name=${{ github.event.inputs.db_cluster_name }}" \
            -var="region=${{ github.event.inputs.region }}" \
            -var="db_size=${{ github.event.inputs.size }}"
          
          # Export outputs to GITHUB_OUTPUT
          echo "db_host=$(terraform output -raw db_host)" >> "$GITHUB_OUTPUT"
          echo "db_port=$(terraform output -raw db_port)" >> "$GITHUB_OUTPUT"
          echo "db_user=$(terraform output -raw db_user)" >> "$GITHUB_OUTPUT"
          echo "db_pass=$(terraform output -raw db_pass)" >> "$GITHUB_OUTPUT"
      
      - name: Verify outputs
        run: |
          echo "Database cluster created successfully!"
          echo "Host: ${{ steps.tfout.outputs.db_host }}"
          echo "Port: ${{ steps.tfout.outputs.db_port }}"
          echo "User: ${{ steps.tfout.outputs.db_user }}"
          echo "Password: [hidden]"
      
      - name: Save DB credentials as repo secrets
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Check if GH_PAT is set
          if [ -z "$GH_TOKEN" ]; then
            echo "::warning::GH_PAT secret not set. Cannot update repository secrets automatically."
            echo "Please manually add the following secrets to your repository:"
            echo "  DB_HOST: ${{ steps.tfout.outputs.db_host }}"
            echo "  DB_PORT: ${{ steps.tfout.outputs.db_port }}"
            echo "  DB_USER: ${{ steps.tfout.outputs.db_user }}"
            echo "  DB_PASSWORD: [check Terraform state]"
            exit 0
          fi
          
          # Update repository secrets
          gh secret set DB_HOST     --body "${{ steps.tfout.outputs.db_host }}"
          gh secret set DB_PORT     --body "${{ steps.tfout.outputs.db_port }}"
          gh secret set DB_USER     --body "${{ steps.tfout.outputs.db_user }}"
          gh secret set DB_PASSWORD --body "${{ steps.tfout.outputs.db_pass }}"
          
          echo "âœ“ Repository secrets updated successfully!"
      
      - name: Display next steps
        run: |
          echo "========================================"
          echo "Database cluster deployed successfully!"
          echo "========================================"
          echo ""
          echo "Next steps:"
          echo "1. The database credentials have been saved as repository secrets"
          echo "2. You can now run the 'Axialy Admin Droplet' workflow"
          echo "3. The droplet will automatically connect to this database"
          echo ""
          echo "Database details:"
          echo "- Cluster: ${{ github.event.inputs.db_cluster_name }}"
          echo "- Region: ${{ github.event.inputs.region }}"
          echo "- Size: ${{ github.event.inputs.size }}"
          echo "========================================"
